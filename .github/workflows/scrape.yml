name: Scrape DHVXC Data

on:
  schedule:
    - cron: '0 16 * * *' 
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Python einrichten
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Abhängigkeiten installieren
        run: |
          pip install playwright
          playwright install --with-deps chromium

      - name: Scraper ausführen
        run: |
          echo "Starte Scraper..."
          python scrape.py
          echo "Scraper beendet."
          
      - name: Dateien überprüfen
        run: |
          echo "Überprüfe erstellte Dateien:"
          ls -la *.json || echo "Keine JSON-Dateien gefunden"
          if [ -f "dhvxc-data.json" ]; then
            echo "dhvxc-data.json Inhalt:"
            cat dhvxc-data.json
          else
            echo "dhvxc-data.json nicht gefunden!"
          fi
          if [ -f "dhvxc-data-lokal.json" ]; then
            echo "dhvxc-data-lokal.json Inhalt:"
            cat dhvxc-data-lokal.json
          else
            echo "dhvxc-data-lokal.json nicht gefunden!"
          fi

      - name: Git Status prüfen
        run: |
          echo "Git Status vor dem Hinzufügen:"
          git status
          git diff

      - name: Änderungen committen und pushen
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Beide JSON-Dateien hinzufügen
          git add dhvxc-data.json dhvxc-data-lokal.json
          
          echo "Git Status nach dem Hinzufügen:"
          git status
          
          # Prüfen ob es Änderungen gibt
          if git diff --cached --quiet; then
            echo "Keine Änderungen zum Committen."
            exit 0
          else
            echo "Änderungen gefunden, committe..."
            git commit -m "Aktualisierte DHVXC-Daten $(date '+%Y-%m-%d %H:%M:%S')"
            git push origin main
            echo "Änderungen erfolgreich gepusht."
          fi